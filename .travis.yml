language: python
python:
- 3.8
- 3.7
- 3.6
os: linux
install:
  - python -m pip install -U pip
  - python -m easy_install -U setuptools
  - pip install -r requirements.txt
  - python setup.py develop
  
script:
- py.test --cov=pixell tests/ -s
after_success:
  - coveralls
  
matrix:
  include:
    - os: osx
      osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
      language: shell
      env: PYTHON=3.7.4
           
deploy:
  provider: pypi
  distributions: sdist --formats=gztar
  user: msyriac
  password:
    secure: BqdgcsgF/yW8qUO+MUax9D8yRIsM7QE67d9vjhHho8nhdAbI76HvmkvWdUe3AjKULDmGQXXWFVllJUF6obO4mj9DMYnKcvsQ5SD3qKMfyiBVNZ1rdzpZvECfJrRDKMBQCRb3RzZzPBvJ6DlCCcfyslseDZ9ezFbNd+airew9ThZ+uTdn+bRJ/lLzFkM8L0fpsZEOW4RCfGEuDD0i54+TVVbhvqYUcuca9rHpWHCjZY2sNwYBB83U6/qLhF6OmvhO5RdVyZusFRNGmXCz/MmwCyBWkAJynWCs/Z4TnME4Pay2dF2/Fu6xN1A+sk34EOEI40KkcI61WW3WCpQUi/8zkgynHsLaaeHpzZAiPxTLVnsbSF1aEvfqpJeVP64sllDA+HpBhbkvbmR9r7GoEolpa3oOzfrgIZRjKI2qps9NiX+RMhMXtUB/o+cXt/nbRG5Uq5FbnWOUOIOgoHeC7nK+7YiV1mHfFkmIGD0C0aPwfp9FQL4v25CzD57ezoEbFUSl8hvQ0IdFvK9rpT8wbqBzjupjjkXd57Jlh3VegaJl/Trf0grlpjhZzbXDIgKV8mgZqiqMJfVZM7MapFfjk576EK3tL+8a4ZGrh5bW35qfEo+cj3qjmIfpTn8N/+rEQziDOKEwY7gFDBgXjf5TVZFoL/8NjIk1gCQdU0MrUzc4B5c=
  on:
    tags: true
    repo: simonsobs/pixell
    python: 3.6
addons:
  apt_packages:
  - gfortran
  
    
before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    xcode-select --install
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi

