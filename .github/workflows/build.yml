name: Build

on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.9", "3.8", "3.7"]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install OS Packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install gfortran
      - name: Run tests
        run: |
          python -m pip install pytest-cov numpy Cython
          python setup.py build_ext -i
          python -m pip install .
          pytest --cov-report html --cov-report xml --cov-report annotate --cov=pixell pixell/tests/ -s
          
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          verbose: true # optional (default = false)
          

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel and other dependencies
        run: |
          python -m pip install -U pip
          python -m easy_install -U setuptools
          python -m pip install pytest-cov numpy
          python -m pip install cibuildwheel

      - name: Test and build wheels
        run: bash scripts/build_wheels.sh
        env:
          CIBW_ENVIRONMENT: OMP_NUM_THREADS=2
                            OPENBLAS_NUM_THREADS=2
                            MACOSX_DEPLOYMENT_TARGET=10.13          
          CIBW_BEFORE_BUILD: "python -m pip install numpy scipy cython"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BUILD: "cp3?-*x86_64"
          CIBW_SKIP: "cp33-* cp34-* cp35-* *-musllinux_*"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
          PYTHON: "python"
          PIP: "pip"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
      

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          python -m pip install -U pip
          python -m easy_install -U setuptools
          python -m pip install numpy
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
